

using ReneUtiles.Clases.BD;
using ReneUtiles;
using ReneUtiles.Clases;
using System;
using System.IO;
using System.Collections.Generic;
namespace RelacionadorDeSerie.BD.Modelos{
	
public abstract class I_BDAdmin:BasicoBD{
		public BDConexion BD;
		protected BDUpdates __Upd;
		protected bool usarUpdater;
		public abstract  I_BDAdmin no_cl();
		public abstract  I_BDAdmin crearTablaDireccion_MD();
		public abstract  I_BDAdmin crearTablaDireccion_MDSiNoExiste();
		public abstract  Direccion_MD getDireccion_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_Direccion_MD(Direccion_MD direccion);
		public abstract  Direccion_MD getDireccion_MD_id(int? id);
		public abstract  Direccion_MD insertarDireccion_MD(Direccion_MD direccion);
		public abstract   List<Direccion_MD> getDireccion_MD_All();
		public abstract  Direccion_MD updateDireccion_MD(Direccion_MD direccion);
		public abstract  void deleteDireccion_MD_ForId(int? id);
		public abstract  void deleteDireccion_MD_ForId(Direccion_MD direccion);
		public abstract  bool existeDireccion_MD_id(int? id);
		public abstract  bool existeDireccion_MD(string url,string tipo_de_ubicacion_de_seccion,string seccion,string categoria);
		public abstract  I_BDAdmin crearTablaEtiquetaDeDireccionPaquete_MD();
		public abstract  I_BDAdmin crearTablaEtiquetaDeDireccionPaquete_MDSiNoExiste();
		public abstract  EtiquetaDeDireccionPaquete_MD getEtiquetaDeDireccionPaquete_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_EtiquetaDeDireccionPaquete_MD(EtiquetaDeDireccionPaquete_MD etiqueta_de_direccion_paquete);
		public abstract  EtiquetaDeDireccionPaquete_MD getEtiquetaDeDireccionPaquete_MD_id(int? id);
		public abstract  EtiquetaDeDireccionPaquete_MD insertarEtiquetaDeDireccionPaquete_MD(EtiquetaDeDireccionPaquete_MD etiqueta_de_direccion_paquete);
		public abstract   List<EtiquetaDeDireccionPaquete_MD> getEtiquetaDeDireccionPaquete_MD_All();
		public abstract  EtiquetaDeDireccionPaquete_MD updateEtiquetaDeDireccionPaquete_MD(EtiquetaDeDireccionPaquete_MD etiqueta_de_direccion_paquete);
		public abstract  void deleteEtiquetaDeDireccionPaquete_MD_ForId(int? id);
		public abstract  void deleteEtiquetaDeDireccionPaquete_MD_ForId(EtiquetaDeDireccionPaquete_MD etiqueta_de_direccion_paquete);
		public abstract  bool existeEtiquetaDeDireccionPaquete_MD_id(int? id);
		public abstract  I_BDAdmin crearTablaDireccionDePaquete_MD();
		public abstract  I_BDAdmin crearTablaDireccionDePaquete_MDSiNoExiste();
		public abstract  DireccionDePaquete_MD getDireccionDePaquete_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_DireccionDePaquete_MD(DireccionDePaquete_MD direccion_de_paquete);
		public abstract  DireccionDePaquete_MD getDireccionDePaquete_MD_id(int? id);
		public abstract  DireccionDePaquete_MD insertarDireccionDePaquete_MD(DireccionDePaquete_MD direccion_de_paquete);
		public abstract   List<DireccionDePaquete_MD> getDireccionDePaquete_MD_All();
		public abstract  DireccionDePaquete_MD updateDireccionDePaquete_MD(DireccionDePaquete_MD direccion_de_paquete);
		public abstract  void deleteDireccionDePaquete_MD_ForId(int? id);
		public abstract  void deleteDireccionDePaquete_MD_ForId(DireccionDePaquete_MD direccion_de_paquete);
		public abstract  bool existeDireccionDePaquete_MD_id(int? id);
		public abstract  void deleteDireccionDePaquete_MD_ForId_CASCADE(int? idkey_direccion_de_paquete);
		public abstract  void deleteDireccionDePaquete_MD_ForId_CASCADE(int? idkey_direccion_de_paquete,Object modeloQueLoLlamo);
		public abstract  I_BDAdmin crearTablaFile_MD();
		public abstract  I_BDAdmin crearTablaFile_MDSiNoExiste();
		public abstract  File_MD getFile_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_File_MD(File_MD file);
		public abstract  File_MD getFile_MD_id(int? id);
		public abstract  File_MD insertarFile_MD(File_MD file);
		public abstract   List<File_MD> getFile_MD_All();
		public abstract  File_MD updateFile_MD(File_MD file);
		public abstract  void deleteFile_MD_ForId(int? id);
		public abstract  void deleteFile_MD_ForId(File_MD file);
		public abstract  bool existeFile_MD_id(int? id);
		public abstract  void deleteFile_MD_ForId_CASCADE(int? idkey_file);
		public abstract  void deleteFile_MD_ForId_CASCADE(int? idkey_file,Object modeloQueLoLlamo);
		public abstract  I_BDAdmin crearTablaArchivoInterno_MD();
		public abstract  I_BDAdmin crearTablaArchivoInterno_MDSiNoExiste();
		public abstract  ArchivoInterno_MD getArchivoInterno_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_ArchivoInterno_MD(ArchivoInterno_MD archivo_interno);
		public abstract  ArchivoInterno_MD getArchivoInterno_MD_id(int? id);
		public abstract  ArchivoInterno_MD insertarArchivoInterno_MD(ArchivoInterno_MD archivo_interno);
		public abstract   List<ArchivoInterno_MD> getArchivoInterno_MD_All();
		public abstract  ArchivoInterno_MD updateArchivoInterno_MD(ArchivoInterno_MD archivo_interno);
		public abstract  void deleteArchivoInterno_MD_ForId(int? id);
		public abstract  void deleteArchivoInterno_MD_ForId(ArchivoInterno_MD archivo_interno);
		public abstract  bool existeArchivoInterno_MD_id(int? id);
		public abstract  I_BDAdmin crearTablaCarpetasPaquete_MD();
		public abstract  I_BDAdmin crearTablaCarpetasPaquete_MDSiNoExiste();
		public abstract  CarpetasPaquete_MD getCarpetasPaquete_MD_Args(Object[] listaDeArgumentos);
		public abstract  Object[] __content_CarpetasPaquete_MD(CarpetasPaquete_MD carpetas_paquete);
		public abstract  CarpetasPaquete_MD getCarpetasPaquete_MD_id(int? id);
		public abstract  CarpetasPaquete_MD insertarCarpetasPaquete_MD(CarpetasPaquete_MD carpetas_paquete);
		public abstract   List<CarpetasPaquete_MD> getCarpetasPaquete_MD_All();
		public abstract  CarpetasPaquete_MD updateCarpetasPaquete_MD(CarpetasPaquete_MD carpetas_paquete);
		public abstract  void deleteCarpetasPaquete_MD_ForId(int? id);
		public abstract  void deleteCarpetasPaquete_MD_ForId(CarpetasPaquete_MD carpetas_paquete);
		public abstract  bool existeCarpetasPaquete_MD_id(int? id);
		public abstract  void crearTodasLasTablas();
		public abstract  void crearTodasLasTablasSiNoExisten();
		public abstract  List<Direccion_MD> getDireccion_MD_All_Tipo_de_ubicacion_de_seccion(string tipo_de_ubicacion_de_seccion);
		public abstract  void deleteDireccion_MD_For_Tipo_de_ubicacion_de_seccion(string tipo_de_ubicacion_de_seccion);
		public abstract  List<Direccion_MD> getDireccion_MD_All_Tipo_de_ubicacion_de_seccion_Seccion(string tipo_de_ubicacion_de_seccion,string seccion);
		public abstract  List<Direccion_MD> getDireccion_MD_All_Tipo_de_ubicacion_de_seccion_Seccion_Categoria(string tipo_de_ubicacion_de_seccion,string seccion,string categoria);
		public abstract  List<Direccion_MD> getDireccion_MD_All_Tipo_de_ubicacion_de_seccion_Categoria(string tipo_de_ubicacion_de_seccion,string categoria);
		public abstract  Direccion_MD getDireccion_MD_For_Url_Tipo_de_ubicacion_de_seccion_Seccion_Categoria(string url,string tipo_de_ubicacion_de_seccion,string seccion,string categoria);
		public abstract  void deleteDireccion_MD_For_Tipo_de_ubicacion_de_seccion_Seccion(string tipo_de_ubicacion_de_seccion,string seccion);
		public abstract  void deleteDireccion_MD_For_Tipo_de_ubicacion_de_seccion_Seccion_Categoria(string tipo_de_ubicacion_de_seccion,string seccion,string categoria);
		public abstract  void deleteDireccion_MD_For_Tipo_de_ubicacion_de_seccion_Categoria(string tipo_de_ubicacion_de_seccion,string categoria);
		public abstract  List<EtiquetaDeDireccionPaquete_MD> getEtiquetaDeDireccionPaquete_MD_All_Idkey_direccion_de_paquete(int? idkey_direccion_de_paquete);
		public abstract  List<EtiquetaDeDireccionPaquete_MD> getEtiquetaDeDireccionPaquete_MD_All_Idkey_direccion_de_paquete(DireccionDePaquete_MD direccion_de_paquete);
		public abstract  void deleteEtiquetaDeDireccionPaquete_MD_For_Idkey_direccion_de_paquete(int? idkey_direccion_de_paquete);
		public abstract  void deleteEtiquetaDeDireccionPaquete_MD_For_Idkey_direccion_de_paquete(DireccionDePaquete_MD direccion_de_paquete);
		public abstract  List<DireccionDePaquete_MD> getDireccionDePaquete_MD_All_Seccion(string seccion);
		public abstract  List<ArchivoInterno_MD> getArchivoInterno_MD_All_Idkey_id_carpeta_padre(int? idkey_id_carpeta_padre);
		public abstract  List<ArchivoInterno_MD> getArchivoInterno_MD_All_Idkey_id_carpeta_padre(File_MD file);
		public abstract  void deleteArchivoInterno_MD_For_Idkey_id_carpeta_padre(int? idkey_id_carpeta_padre);
		public abstract  void deleteArchivoInterno_MD_For_Idkey_id_carpeta_padre(File_MD file);
		public abstract  List<CarpetasPaquete_MD> getCarpetasPaquete_MD_All_Idkey_file(int? idkey_file);
		public abstract  List<CarpetasPaquete_MD> getCarpetasPaquete_MD_All_Idkey_file(File_MD file);
		public abstract  void deleteCarpetasPaquete_MD_For_Idkey_file(int? idkey_file);
		public abstract  void deleteCarpetasPaquete_MD_For_Idkey_file(File_MD file);
	}
}
